#Project Setup
general:
  unsafeMode: false
  productiveBranch: master
  collectTelemetryData: true
  defaultNode: ""
  runStageInPod: true
  globalExtensionsDirectory: 's4hana_pipeline/extensions/'
  inferBuildTool: true
  inferProjectName: true
  initCloudSdkStashSettings: true
  containerMapResource: 'com.sap.piper/pipeline/cloudSdkContainersMap.yml'
  legacyConfigSettings: 'com.sap.piper/pipeline/cloudSdkLegacyConfigSettings.yml'
  stageConfigResource: 'com.sap.piper/pipeline/cloudSdkStageDefaults.yml'

  maven:
    m2Path: s4hana_pipeline/maven_local_repo
  mandatoryStages:
    - "initS4sdkPipeline"
    - "build"
    - "backendIntegrationTests"
    - "additionalUnitTests"
    - "frontendIntegrationTests"
    - "artifactDeployment"
    - "productionDeployment"

#Steps Specific Configuration
steps:
  piperStageWrapper:
    stageLocking: false
    stashContent: []

  artifactPrepareVersion:
    versioningType: cloud_noTag

  mavenExecute:
    dockerImage: maven:3.6.3-jdk-8-slim
    dockerOptions: ""

  npmExecuteScripts:
    dockerImage: ppiper/node-browsers:v3

  executeGradle:
    dockerImage: gradle:6.0.0-jdk8

  buildExecute:
    npmInstall: true
    npmRunScripts:
      - 'ci-build'
      - 'ci-backend-unit-test'
      - 'ci-package'

  testsPublishResults:
    junit:
      active: false
    jacoco:
      active: false
    cobertura:
      active: false
    cucumber:
      active: false

  # Disable checks that require outdated/legacy/unmaintained Jenkins plugins
  checksPublishResults:
    pmd:
      active: false
    cpd:
      active: false
    findbugs:
      active: false
    checkstyle:
      active: false
    warnings:
      active: false
    eslint:
      active: false
    pylint:
      active: false
    tasks:
      active: false
    aggregation:
      active: false

  checkJMeter:
    dockerImage: famiko/jmeter-base
    testPlan: ./performance-tests/*
    reportDirectory: /jmeter-report
    failThreshold: 100
    unstableThreshold: 90

  cloudFoundryDeploy:
    dockerImage: ppiper/cf-cli:v2
    keepOldInstance: true
    useGoStep: true
    stashContent: []

  cloudFoundryCreateService:
    stashContent: []

  neoDeploy:
    dockerImage: ppiper/neo-cli:v2
    deployMode: "warParams"
    neoHome: "/sdk"
    mavenDeploymentModule: 'application'

  mtaBuild:
    buildTarget: "CF"
    mtaBuildTool: "cloudMbt"
    installArtifacts: true

  tmsUpload:
    namedUser: "CLOUD_SDK_PIPELINE"

  sonarExecuteScan:
    coverageExclusions: ["**.js", "unit-tests/**", "integration-tests/**", "performance-tests/**", "**.xml", "**/target/**"]
    inferJavaLibraries: true
    inferJavaBinaries: true
    inferBranchName: true
    dockerImage: 'ppiper/node-browsers:v3'

  fortifyExecuteScan:
    buildTool: 'maven'
    stashContent:
      - "SOURCE"
      - "M2"
      - "TARGET"

  whitesourceExecuteScan:
    useGoStep: true
    dockerImage: 'devxci/mbtci:1.0.14' #contains mvn, npm, npx -> the mtaBuild image for classic contains no npx!
    stashContent:
      - "SOURCE"
      - "M2"
      - "NODE_MODULES"
      - "PACKAGE_LOCK"

  checkmarxExecuteScan:
    filterPattern: "!**/*.log, !**/*.lock, !**/*.json, !**/*.html, !**/Cx*, !**/test/**, !s4hana_pipeline/**, !**/unit-tests/**, !**/integration-tests/**, !**/frontend-unit-tests/**, !**/e2e-tests/**, !**/performance-tests/**, **/*.js, **/*.java, **/*.ts"
    preset: "36"
    vulnerabilityThresholdLow: 99999
    vulnerabilityThresholdMedium: 0
    vulnerabilityThresholdUnit: 'absolute'
    stashContent:
      - "SOURCE"
      - "TARGET"

#Stage Specific Configurations
stages:
  build:
    junit:
      active: true
      pattern: '**/target/surefire-reports/*.xml,s4hana_pipeline/reports/backend-unit/**'

  integration:
    runScripts: ['ci-it-backend', 'ci-it-frontend']
    virtualFrameBuffer: true
    junit:
      active: true
      pattern: 'integration-tests/target/surefire-reports/TEST-*.xml,s4hana_pipeline/reports/backend-integration/**,s4hana_pipeline/reports/frontend-integration/**/*.xml'

  additionalUnitTests:
    runScripts: ['ci-frontend-unit-test']
    virtualFrameBuffer: true
    junit:
      active: true
      allowEmptyResults: true
      pattern: 's4hana_pipeline/reports/frontend-unit/**/Test*.xml'
    htmlPublisher:
      active: true
      reportDir: ""
      pattern: "s4hana_pipeline/reports/**/report-html/ut/index.html"
      reportName: "Frontend Unit Test Coverage"

  endToEndTests:
    stageLocking: true
    lockingResource: 'endToEndTest'
    junit:
      active: true
      pattern: 's4hana_pipeline/reports/e2e/*.xml'
    cucumber:
      active: true
      pattern: 's4hana_pipeline/reports/e2e/*.json'

  performanceTests:
    stageLocking: true
    lockingResource: 'performanceTests'

  productionDeployment:
    runInAllBranches: false
    enableZeroDowntimeDeployment: true
    stageLocking: true
    lockingResource: 'productionDeployment'
    ordinal: 80

  artifactDeployment:
    runInAllBranches: false

  compliance:
    runInAllBranches: false

  security:
    runInAllBranches: false
    runStageInPod: false

